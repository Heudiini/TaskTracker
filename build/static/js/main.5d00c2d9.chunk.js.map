{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d00c2d9.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nconst Button = ({color,text, onClick}) => {\r\n \r\n    return (\r\n     <button onClick={onClick} style ={{backgroundColor:color}}\r\n     className=\"btn\">\r\n         {text}\r\n         </button>\r\n    )\r\n}\r\nButton.defaultProps={\r\n    color: \"steelblue\"\r\n}\r\n\r\nButton.propTypes={\r\n    text:PropTypes.string,\r\n    color:PropTypes.string,\r\n    onClick:PropTypes.func,\r\n}\r\n\r\n\r\nexport default Button","\r\nimport PropTypes from \"prop-types\"\r\nimport Button from \"./Button\"\r\n\r\n\r\nconst Header = ({title,onAdd, showAdd}) => {\r\n   \r\n    \r\n    return (\r\n        <header className=\"header\">\r\n        <h1 >{title}</h1>\r\n        <Button\r\n         color ={showAdd ? \"red\" : \"green\"} \r\n         text={showAdd ? \"Close\": \"Add\"}\r\n         onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title:\" Task Tracker\"\r\n}\r\nHeader.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n}\r\n//css in js\r\n///const headingStyle = {\r\n\r\n///}\r\nexport default Header\r\n","import {FaTimes} from \"react-icons/fa\"\r\n\r\nconst Task = ({task,onDelete, onToggle}) => {\r\n    return (\r\n      <div\r\n      className={`task ${task.reminder && 'reminder'}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n    )\r\n}\r\nexport default Task","import Task from \"./Task\"\r\n\r\nconst Tasks = ({tasks,onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n            \r\n        {tasks.map((task) => (\r\n        <Task key={task.id} task ={task}\r\n         onDelete={onDelete} onToggle ={onToggle}/>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from \"react\"\r\n\r\nconst AddTask = ({onAdd}) => {\r\nconst [text,setText] = useState(\"\")\r\nconst [day,setDay] = useState(\"\")\r\nconst [reminder,setReminder] = useState\r\n(false)\r\nconst onSubmit= (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n        alert(\"Please add a task\")\r\n        return\r\n\r\n    }\r\n    onAdd({text,day,reminder})\r\n    setText(\"\")\r\n    setDay(\"\")\r\n    setReminder(false)\r\n}\r\n    return (\r\n        <form className =\"add-forms\" onSubmit=\r\n        {onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>tehtävä</label>\r\n                <input type= \"text\" placeholder=\"lisää tehtävä\" value={text} \r\n                onChange ={(e) => setText(e.target.value)}/>\r\n        </div> \r\n        <div className=\"form-control\">\r\n                <label>päivä ja aika</label>\r\n                <input type= \"text\" placeholder=\"lisää pvm ja aika\" value={day}\r\n                onChange ={(e) => setDay(e.target.value)}\r\n                />\r\n        </div> \r\n        <div className=\"form-control\r\n        form-control-check\">\r\n                <label> Aseta muistutus</label>\r\n                <input \r\n                type= \"checkbox\" \r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange ={(e) => setReminder(e.currentTarget.checked)}\r\n                />       \r\n        </div> \r\n        <input type = \"submit\" value =\"save task\" \r\n        className=\"btn btn-block\" />\r\n        </form>\r\n        \r\n    )\r\n}\r\nexport default AddTask","//Tutorial from:\n//www.youtube.com/watch?v=w7ejDZ8SWv8// \n///\n\n\nimport { useState} from \"react\"\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\n\nconst App = ()  =>{ \n  const [showAddTask, setShowAddTask] = useState\n  (false)\n  const[tasks,setTasks]= useState([\n    { \n        id:1,\n        text: \"meeting\",\n        day: \"December 5:th  at 20:00\" ,\n        reminder:true,\n    },\n    {\n        id:2,\n        text:\"shop\",\n        day:\"January 1.st at 9:00\",\n        reminder: false,\n    }\n    \n     ])\n// add task\nconst addTask = (task) => {\n  const id  = Math.floor(Math.random() * \n  10000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n\n\n\n\n\n//delete task\nconst deleteTask = (id)=> {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n \n// toggle reminder\nconst toggleReminder = (id) => {\n\nsetTasks(tasks.map((task)=> task.id === id ? { ...task, reminder:\n   !task.reminder}: task\n   )\n   )\n}\n\n\n  return (\n    <div className=\"container\">\n     <Header onAdd = {() => setShowAddTask\n      (!showAddTask)}\n       showAdd = {showAddTask}\n      /> \n     {showAddTask && <AddTask onAdd = {addTask}/>}\n     {tasks.length > 0 ? (\n     <Tasks tasks={tasks} onDelete=\n     {deleteTask} onToggle={toggleReminder}/>\n      )\n       :( \n         \"There´s nothing\"\n       )}\n </div>\n  )}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}